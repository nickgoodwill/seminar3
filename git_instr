## Git Instrustion ##

#### List of git commands ####

* git init [название проекта] :

Создаёт новый локальный репозиторий с заданным именем

* git add [название файла] :

Индексирует указанный файл для последующего коммита

* git commit -m "[сообщение с описанием]" :

Фиксирует проиндексированные изменения и сохраняет их в историю версий

* git status :

Перечисляет все новые или изменённые файлы, которые нуждаются в фиксации

* git diff :

Показывает различия по внесённым изменениям в ещё не проиндексированных файлах

* git diff --staged :

Показывает различия между проиндексированной и последней зафиксированной версиями файлов

* git reset [название файла] :

Отменяет индексацию указанного файла, при этом сохраняет его содержимое

* git log :

История коммитов для текущей ветки

* git log --all :

История всех коммитов для текущей ветки

* git log --oneline :

История коммитов для текущей ветки (с короткими логами)

* git branch :

Список именованных веток коммитов с указанием выбранной ветки

* git branch [имя ветки] :

Создаёт новую ветку

* git checkout [имя ветки] :

Переключает на новую ветку

* git merge [имя ветки] :

Вносит изменения указанной ветки в текущую ветку (master)

* git branch -d [имя ветки] :

Удаляет выбранную ветку

![green](grogu.jpg)

this is just grogu

* git log --graph :

Графически показывает движение логов по веткам

* git log --oneline --all --graph

Отображает все логи в коротком виде и движение по веткам графически

* git branch -D [имя ветки] :

Удаляет выбранную ветку со всеми логами

* git diff :

Команда используется для вычисления разницы между любыми двумя Git деревьями. Это может быть разница между вашей рабочей директорией и индексом (собственно git diff), разница между индексом и последним коммитом (git diff --staged), или между любыми двумя коммитами (git diff master branchB).